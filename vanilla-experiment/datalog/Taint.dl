.type Node
.type Exp
.type Loc

.decl DUEdge(n:Node, l:Loc, m:Node)
.decl DUSuperEdge(n:Node, m:Node)
.decl DUPath(n:Node, m:Node)
.decl Entry(n:Node)
.decl Exit(n:Node)
.decl Call(n:Node, f:Exp)
.decl Bind(l:Loc, r:Loc)
.decl Alarms(n:Node, m:Node)
.decl Deriv_DUSuperEdge0(n:Node, l:Loc, m:Node)
.decl Deriv_DUSuperEdge1(n:Node, l:Loc, c:Node, f:Exp, p:Loc, w:Node, m:Node)
.decl Deriv_DUSuperEdge2(n:Node, l:Loc, c:Node, f:Exp, w:Node, m:Node)
.decl Deriv_DUSuperEdge3(n:Node, l:Loc, c:Node, f:Exp, k:Loc, m:Node)
.decl Deriv_DUSuperEdge4(n:Node, l:Loc, w:Node, m:Node)
.decl Deriv_DUPath0(n:Node, m:Node)
.decl Deriv_DUPath1(n:Node, w:Node, m:Node)

.input Entry
.input Exit
.input Call
.input Bind
.input DUEdge
.input Alarms
.output DUPath
.output DUSuperEdge
.output Deriv_DUSuperEdge0
.output Deriv_DUSuperEdge1
.output Deriv_DUSuperEdge2
.output Deriv_DUSuperEdge3
.output Deriv_DUSuperEdge4
.output Deriv_DUPath0
.output Deriv_DUPath1

DUSuperEdge(n, m) :-
  DUEdge(n, _, m), !Call(n, _), !Call(m, _), !Exit(n), !Exit(m).
/* local variables */
DUSuperEdge(n, m) :-
  DUEdge(n, l, c), Call(c, _), Bind(l, p),
  DUEdge(c, p, w), Entry(w), DUEdge(w, p, m).
/* global variables */
DUSuperEdge(n, m) :-
  DUEdge(n, l, c), Call(c, _),
  DUEdge(c, l, w), Entry(w), DUEdge(w, l, m).
DUSuperEdge(n, m) :-
  DUEdge(n, _, c), Call(c, _), DUEdge(c, _, m), !Entry(m).
DUSuperEdge(n, m) :-
  DUEdge(n, l, w), Exit(w), DUEdge(w, l, m).

/* compute only reachable path tuples from alarms */
DUPath(n, m) :- DUSuperEdge(n, m), Alarms(n, _).
DUPath(n, m) :- DUPath(n, w), DUSuperEdge(w, m).

Deriv_DUSuperEdge0(n, l, m) :-
  DUEdge(n, l, m), !Call(n, _), !Call(m, _), !Exit(n), !Exit(m).
Deriv_DUSuperEdge1(n, l, c, f, p, w, m) :-
  DUEdge(n, l, c), Call(c, f), Bind(l, p),
  DUEdge(c, p, w), Entry(w), DUEdge(w, p, m).
Deriv_DUSuperEdge2(n, l, c, f, w, m) :-
  DUEdge(n, l, c), Call(c, f),
  DUEdge(c, l, w), Entry(w), DUEdge(w, l, m).
Deriv_DUSuperEdge3(n, l, c, f, k, m) :-
  DUEdge(n, l, c), Call(c, f), DUEdge(c, k, m), !Entry(m).
Deriv_DUSuperEdge4(n, l, w, m) :-
  DUEdge(n, l, w), Exit(w), DUEdge(w, l, m).

Deriv_DUPath0(n, m) :- DUSuperEdge(n, m), Alarms(n, _).
Deriv_DUPath1(n, w, m) :- DUPath(n, w), DUSuperEdge(w, m).
